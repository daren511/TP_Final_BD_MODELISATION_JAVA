/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package tp.pkgfinal;
import java.sql.*;
import java.awt.*;
import javax.swing.*;

/**
 *
 * @author 201106779
 */
public class Inventaire extends javax.swing.JFrame {

    /**
     * Creates new form Inventaire
     */
    public Inventaire(ConnectionOracle conn) {
        initComponents();
        this.connBD = conn;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BTN_OK = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Liste_Inventaire = new javax.swing.JList();
        BTN_Lister = new javax.swing.JButton();
        Radio_Armes = new javax.swing.JRadioButton();
        Radio_Armures = new javax.swing.JRadioButton();
        Radio_Habilites = new javax.swing.JRadioButton();
        Radio_Potions = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        BTN_OK.setText("OK");
        BTN_OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_OKActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(Liste_Inventaire);

        BTN_Lister.setText("Lister");
        BTN_Lister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTN_ListerActionPerformed(evt);
            }
        });

        Radio_Armes.setText("Armes");

        Radio_Armures.setText("Armures");

        Radio_Habilites.setText("Habilites");

        Radio_Potions.setText("Potions");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Radio_Armures)
                            .addComponent(Radio_Armes)
                            .addComponent(Radio_Habilites)
                            .addComponent(Radio_Potions)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(186, 186, 186)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(BTN_OK, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                            .addComponent(BTN_Lister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(Radio_Armes)
                        .addGap(18, 18, 18)
                        .addComponent(Radio_Armures)
                        .addGap(18, 18, 18)
                        .addComponent(Radio_Habilites)
                        .addGap(18, 18, 18)
                        .addComponent(Radio_Potions))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(BTN_Lister)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(BTN_OK)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BTN_OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_OKActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_BTN_OKActionPerformed

    private void BTN_ListerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTN_ListerActionPerformed
        // TODO add your handling code here:
        
        String genre = " ";
        int NbSelection = 0;
        
        if(Radio_Armes.isSelected()){++NbSelection;}
        if (Radio_Armures.isSelected()){++NbSelection;}
        if (Radio_Habilites.isSelected()){++NbSelection;}
        if (Radio_Potions.isSelected()){++NbSelection;}
       
            int i = 0;  
            while (i<NbSelection)
            {
                if(Radio_Armes.isSelected())
                {
                    genre = "Genre ='"+Radio_Armes.getText().toString()+"'";
                    ++i;
                    if(i < NbSelection)
                        genre += "or ";
                }
                if (Radio_Armures.isSelected())
                {
                    genre += "Genre ='"+ Radio_Armures.getText().toString() + "'";
                    ++i;
                    if(i < NbSelection)
                        genre += "or ";
                }
                if (Radio_Habilites.isSelected())
                {
                    genre += "Genre ='"+ Radio_Habilites.getText().toString() + "'";
                    ++i;
                    if(i < NbSelection)
                        genre += "or ";
                }
                if (Radio_Potions.isSelected())
                {
                    genre += "Genre ='"+ Radio_Potions.getText().toString() + "'";
                    ++i;
                }
                
            }
        
        
    
        String sqllister = "Select IDITEM,NOMITEM,PRIX,QUANTITEDISPO,GENRE FROM ITEMS WHERE " + genre;
        
        try
        {
            Statement stmLister = connBD.getConnection().createStatement();
            ResultSet rst2 = stmLister.executeQuery(sqllister);
            DefaultListModel listModel = new DefaultListModel();
            while(rst2.next())
            {
                listModel.addElement("ID :"+rst2.getString(1).toString()+" "+"Nom d'item :"+rst2.getString(2).toString()+" "+"Prix :"+rst2.getString(3).toString()+" "+"QuantitÃ© :"+rst2.getString(4).toString()+" "+"Genre :"+rst2.getString(5).toString());
            }
            Liste_Inventaire.setModel(listModel);
        }
        catch(SQLException sqlex){ System.out.println(sqlex);}
        
        
    }//GEN-LAST:event_BTN_ListerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inventaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inventaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inventaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inventaire.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Inventaire().setVisible(true);
            }
        });
    }
// Declaration d'une variable connBD de type ConnectionOracle
   private ConnectionOracle connBD;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTN_Lister;
    private javax.swing.JButton BTN_OK;
    private javax.swing.JList Liste_Inventaire;
    private javax.swing.JRadioButton Radio_Armes;
    private javax.swing.JRadioButton Radio_Armures;
    private javax.swing.JRadioButton Radio_Habilites;
    private javax.swing.JRadioButton Radio_Potions;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
